[{"_meta":{"id":"5af7b45aa9cbb30013aca546","name":"New Document","updatedAt":1526183347640,"createdAt":1526183002309,"published":false},"author":{"bio":"Austin Lanari is a software engineer who likes to test new things before there is much documentation about them. He likes to think this process is sort of like how Saiyans' bodies are stronger after they get beaten half to death, but for his pride and his brain.","name":"Austin Lanari","_meta":{"id":"5af7b4916280100013952134","name":"New Document","updatedAt":1526183253022,"createdAt":1526183057061,"published":false}},"body":"<p>This is blog post number one. It has some kind of crazy id and I'd like to display it next to another blog post on my gatsby page without having to individually fetch each one.</p>\n","featuredImage":{"id":"5add4b83599b450013e6c3ac","name":"best","size":71075,"url":"https://cdn.tipe.io/tipe/best.png","mime":"image/png"},"title":"First Blog Post","urlSlug":"first-blog-post"},{"_meta":{"id":"5af7b5b86280100013952137","name":"New Document","updatedAt":1526183762607,"createdAt":1526183352694,"published":false},"author":{"bio":"Austin Lanari is a software engineer who likes to test new things before there is much documentation about them. He likes to think this process is sort of like how Saiyans' bodies are stronger after they get beaten half to death, but for his pride and his brain.","name":"Austin Lanari","_meta":{"id":"5af7b4916280100013952134","name":"New Document","updatedAt":1526183253022,"createdAt":1526183057061,"published":false}},"body":"<p>This is my second blog post. If I was using a more advanced Gatsby starter (i.e. one where somebody already did a lot of work for me), I could just slap this text in a markdown file in a particular folder and <code>gatsby-node.js</code> would have logic to slip it into the proper graphQL node. Somewhere, there'd be logic to render a link to each node and <em>voila</em>.</p>\n<p>Out of the box, there is not yet a gatsby plugin for tipe. So, the best I can currently do (and I'm hoping this works because I'm taking all this time to write my plan out) is treat the remote tipe folder as if it were the gatsby folder. Somehow, I need to query this special folder with my blogposts in it (by id) and I need to get the json that is dumped with the blog post content as a result out of the graphql loaded via <code>tipe-loader</code> and take that and inject it via <code>gatsby-node</code> into gatsby's graphql logic.</p>\n<p>Alternatively, I could skip the <code>gatsby-node</code> step, but this feels sloppy becuase 1. There's no guarantee that Tipe will be the only source of truth for my content going forward and 2. if Tipe ultimately loaded via the <code>gatsby-source</code> ecosystem, it would be exposed via gatsby and not just pulled out of the sky in json in my js files. A third factor is, that if we respect gatsby as a tool and want to make Tipe fit the ecosystem, we should be <em>trying</em> to get Tipe to operate <em>within</em> that ecosystem as much as humanly possible.</p>\n<p>Ok damnit this was supposed to be a test post.</p>\n","featuredImage":{"id":"5add4b83599b450013e6c3ae","name":"learn","size":67852,"url":"https://cdn.tipe.io/tipe/learn.png","mime":"image/png"},"title":"Tipe & Gatsby","urlSlug":"tipe-and-gatsby"},{"_meta":{"id":"5af7f2c7498e280013867440","name":"New Document","updatedAt":1526199777539,"createdAt":1526198983889,"published":false},"author":{"bio":"Austin Lanari is a software engineer who likes to test new things before there is much documentation about them. He likes to think this process is sort of like how Saiyans' bodies are stronger after they get beaten half to death, but for his pride and his brain.","name":"Austin Lanari","_meta":{"id":"5af7b4916280100013952134","name":"New Document","updatedAt":1526183253022,"createdAt":1526183057061,"published":false}},"body":"<p>I've been using Gatsby since the dark beta days before GraphQL was implemented, and have been wanting to check out a headless CMS since I started; after all, constantly updating files because of typos and word choices, all in raw markdown, is not super hospitable to even small teams, let alone working with a client.</p>\n<p>Enter Tipe.io!</p>\n<p>Instructions for integrating Tipe and Gatsby were posted... oh.... 5, 6 days ago as of me writing this. They rely on <code>tipe-loader</code>, which allows users to have graphQL <code>*.tipe</code> files from which users can load the object response of either a single document or folder of documents right into the JS file of their choice with minimum webpack-esque config.</p>\n<p>The problem is, for multiple blog posts, this method of loading pages completely cuts against the grain of all of the ways that Gatsby could possibly help us load things. For instance, we can load a folder's worth of docs into js, giving us an array of attributes for each blog post. But mapping through raw data like this and toploading it into components is an anti-pattern in Gatsby. Unless we know for a fact (and we know nothing for a fact: we're web developers) that every single blog post we ever make will have no source of truth other than Tipe, we need to be able to ask for Tipe data from within the Gatsby ecosystem (i.e. gatsby's graphQL schema), specifically with respect to things like blog posts. The <code>tipe-loader</code> paradigm still makes sense for pages since they are, by their nature, fairly ad hoc.</p>\n<p>So how can we do this? With an eye towards eventually making a source plugin, my general strategy was:</p>\n<ol>\n<li>Query the Tipe API for my stuff outside of <code>tipe-loader</code> on my own terms.</li>\n<li>Write the results to local JSON.</li>\n<li>Use <code>gatsby-source-filesystem</code> and <code>gatsby-transformer-json</code> to automatically populate the graphQL schema with data from Tipe and the queries to grab it.</li>\n<li>Operate as normal within Gatsby.</li>\n</ol>\n<p>You can find the source code for this site <a href=\"https://github.com/foggy1/trying-tipe\">here</a>.</p>\n<p>I wanted to started with a gatsby source plugin, but despite having patched a few plugins for gatsby, the source ones are more involved and I mostly just wanted to see if I could hook Tipe up during build without many hiccups.</p>\n<p>The one odd thing I had to do, that I hadn't thought of, was convert the markdown that the Tipe API sends down into html myself: I'm used to gatsby taking care of that for me via remark with local markdown files. I will have to think if there is a better way to handle this than simply synchronously mapping the body of each post to its markdown-parsed equivalent. I do think that writing JSON is still better than writing markdown files, though, because Tipe in particular (I can't speak to any other CMS API) leans into the graph in \"graphQL\", and nested attributes (like things I might stick on an \"author\" association) will get weird in the shuffle.</p>\n<p>(FYI I just saved this post and rebuilt my site locally, and the post was just... there, which is super cool)</p>\n<p>Anyway, apologies if the code is a mess in terms of formatting. I zipped through this in a night on a machine with emacs settings that are VERY unsuited to writing neat JS, so I'll have to do something about that. Yes, I use emacs.</p>\n<p>Anyway, <a href=\"https://github.com/foggy1/trying-tipe\">take a look at the source code</a>. If you're someone working on Tipe who stumbled on this and you want feedback, <a href=\"http://twitter.com/austinlanari\">hit me up on Twitter</a>. If you're a Gatsby-head, or anyone really, and want to collab on a Tipe source plugin, I'm all ears for that as well.</p>\n","featuredImage":null,"title":"All Declarative Everything","urlSlug":"all-declarative-everything"}]